name: CI

on:
  push:
    branches: [master]
    tags:
      - v*
    paths:
      - "**.go"
  pull_request:
    branches: [master]
  workflow_dispatch: {}

jobs:
  build:
    name: "Build, test and release"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.4

      - name: Create Terraform plugins directory
        run: mkdir -p ~/.terraform.d/plugins/terraform.local/r0flcopt3r/kea-dhcp4/1.0.0/linux_amd64/

      - name: Build
        env:
          CGO_ENABLED: "0"
          GOOS: linux
          GOARCH: amd64
        run: go build -v -a -o ~/.terraform.d/plugins/terraform.local/r0flcopt3r/kea-dhcp4/1.0.0/linux_amd64/terraform-provider-kea-dhcp4_v1.0.0

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2

      - name: Set up test environment
        run: |
          docker network create kea
          docker build -t kea-test -f kea.Dockerfile .
          docker build -t nginx-test -f api.Dockerfile .
          docker run -d --network kea --name kea kea-test
          docker run -d --network kea --name api -p 127.0.0.1:8080:8080/tcp nginx-test
          sleep 30

      - name: Test
        working-directory: test-data/terraform
        run: |
          terraform init
          terraform apply -auto-approve
          terraform destroy -auto-approve

      - name: Import GPG key
        if: startsWith(github.ref, 'refs/tags/')
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Run GoReleaser
        if: startsWith(github.ref, 'refs/tags/')
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GPG_FINGERPRINT:
            ${{ steps.import_gpg.outputs.fingerprint }}
            # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
